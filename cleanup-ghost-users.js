// Script para limpar usu√°rios fantasma do Supabase
// Execute este script no console do navegador na p√°gina de admin do Supabase

import { createClient } from '@supabase/supabase-js'

const supabaseUrl = 'https://rjwuedzmapeozijjrcik.supabase.co'
const supabaseServiceKey = 'YOUR_SERVICE_ROLE_KEY' // Substitua pela sua service key

const supabase = createClient(supabaseUrl, supabaseServiceKey)

async function cleanupGhostUsers() {
  try {
    console.log('üßπ Iniciando limpeza de usu√°rios fantasma...')
    
    // Buscar todos os usu√°rios do auth
    const { data: { users }, error: authError } = await supabase.auth.admin.listUsers()
    
    if (authError) {
      console.error('‚ùå Erro ao buscar usu√°rios do auth:', authError)
      return
    }

    console.log(`üìä Total de usu√°rios no auth: ${users?.length || 0}`)

    // Buscar todos os profissionais
    const { data: professionals, error: profError } = await supabase
      .from('professionals')
      .select('id, email')

    if (profError) {
      console.error('‚ùå Erro ao buscar profissionais:', profError)
      return
    }

    console.log(`üìä Total de profissionais: ${professionals?.length || 0}`)

    const professionalIds = new Set(professionals?.map(p => p.id) || [])
    
    // Identificar usu√°rios fantasma
    const ghostUsers = users?.filter(user => !professionalIds.has(user.id)) || []
    
    console.log(`üîç Encontrados ${ghostUsers.length} usu√°rios fantasma:`)
    ghostUsers.forEach(user => {
      console.log(`  - ${user.email} (ID: ${user.id})`)
    })
    
    if (ghostUsers.length === 0) {
      console.log('‚úÖ Nenhum usu√°rio fantasma encontrado!')
      return
    }
    
    // Confirmar antes de deletar
    const confirmDelete = confirm(`Deseja deletar ${ghostUsers.length} usu√°rios fantasma?`)
    if (!confirmDelete) {
      console.log('‚ùå Opera√ß√£o cancelada pelo usu√°rio')
      return
    }
    
    // Deletar usu√°rios fantasma do auth
    let deletedCount = 0
    for (const user of ghostUsers) {
      try {
        const { error: deleteError } = await supabase.auth.admin.deleteUser(user.id)
        if (deleteError) {
          console.error(`‚ùå Erro ao deletar usu√°rio fantasma ${user.email}:`, deleteError)
        } else {
          console.log(`‚úÖ Usu√°rio fantasma deletado: ${user.email}`)
          deletedCount++
        }
      } catch (deleteError) {
        console.error(`‚ùå Erro ao deletar usu√°rio fantasma ${user.email}:`, deleteError)
      }
    }
    
    console.log(`‚úÖ Limpeza conclu√≠da! ${deletedCount} usu√°rios fantasma deletados.`)
  } catch (error) {
    console.error('‚ùå Erro na limpeza de usu√°rios fantasma:', error)
  }
}

// Executar a limpeza
cleanupGhostUsers()
